//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5472
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.5472.
// 
#pragma warning disable 1591

namespace LMSWarehouse.Fedex {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SupaTaskSoap", Namespace="http://fedex.supaswift.co.za/")]
    public partial class SupaTask : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CaptureParcelOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback ErrorDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback MyFocisLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback DimensionUpdateOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SupaTask() {
            this.Url = global::LMSWarehouse.Properties.Settings.Default.LMSWarehouse_Fedex_SupaTask;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CaptureParcelCompletedEventHandler CaptureParcelCompleted;
        
        /// <remarks/>
        public event CancelItemCompletedEventHandler CancelItemCompleted;
        
        /// <remarks/>
        public event ErrorDetailCompletedEventHandler ErrorDetailCompleted;
        
        /// <remarks/>
        public event MyFocisLoginCompletedEventHandler MyFocisLoginCompleted;
        
        /// <remarks/>
        public event DimensionUpdateCompletedEventHandler DimensionUpdateCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fedex.supaswift.co.za/CaptureParcel", RequestNamespace="http://fedex.supaswift.co.za/", ResponseNamespace="http://fedex.supaswift.co.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CaptureParcel(
                    string ParcelNumber, 
                    string WaybillNumber, 
                    string AccountNumber, 
                    string CustomerRef, 
                    string CostCentre, 
                    string CustomerName, 
                    string ShipmentAdd1, 
                    string ShipmentAdd2, 
                    string ShipmentAdd3, 
                    string ShipmentAdd4, 
                    string ShipmentPostalCode, 
                    string ShipmentCountryID, 
                    string CustomerPhone, 
                    string ShipperServiceID, 
                    double Weight, 
                    double Length, 
                    double Width, 
                    double Height, 
                    double Value, 
                    System.DateTime DispatchDate, 
                    bool WeekendDelivery, 
                    int SequenceNumber, 
                    int SequenceTotal, 
                    string SpecialInstructions, 
                    string PickupCompanyName, 
                    string PickupAdd1, 
                    string PickupAdd2, 
                    string PickupAdd3, 
                    string PickupAdd4, 
                    string PickupPostalCode, 
                    string PickupCountryID, 
                    string PickupPhone, 
                    bool Insured, 
                    bool IsCollection) {
            object[] results = this.Invoke("CaptureParcel", new object[] {
                        ParcelNumber,
                        WaybillNumber,
                        AccountNumber,
                        CustomerRef,
                        CostCentre,
                        CustomerName,
                        ShipmentAdd1,
                        ShipmentAdd2,
                        ShipmentAdd3,
                        ShipmentAdd4,
                        ShipmentPostalCode,
                        ShipmentCountryID,
                        CustomerPhone,
                        ShipperServiceID,
                        Weight,
                        Length,
                        Width,
                        Height,
                        Value,
                        DispatchDate,
                        WeekendDelivery,
                        SequenceNumber,
                        SequenceTotal,
                        SpecialInstructions,
                        PickupCompanyName,
                        PickupAdd1,
                        PickupAdd2,
                        PickupAdd3,
                        PickupAdd4,
                        PickupPostalCode,
                        PickupCountryID,
                        PickupPhone,
                        Insured,
                        IsCollection});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CaptureParcelAsync(
                    string ParcelNumber, 
                    string WaybillNumber, 
                    string AccountNumber, 
                    string CustomerRef, 
                    string CostCentre, 
                    string CustomerName, 
                    string ShipmentAdd1, 
                    string ShipmentAdd2, 
                    string ShipmentAdd3, 
                    string ShipmentAdd4, 
                    string ShipmentPostalCode, 
                    string ShipmentCountryID, 
                    string CustomerPhone, 
                    string ShipperServiceID, 
                    double Weight, 
                    double Length, 
                    double Width, 
                    double Height, 
                    double Value, 
                    System.DateTime DispatchDate, 
                    bool WeekendDelivery, 
                    int SequenceNumber, 
                    int SequenceTotal, 
                    string SpecialInstructions, 
                    string PickupCompanyName, 
                    string PickupAdd1, 
                    string PickupAdd2, 
                    string PickupAdd3, 
                    string PickupAdd4, 
                    string PickupPostalCode, 
                    string PickupCountryID, 
                    string PickupPhone, 
                    bool Insured, 
                    bool IsCollection) {
            this.CaptureParcelAsync(ParcelNumber, WaybillNumber, AccountNumber, CustomerRef, CostCentre, CustomerName, ShipmentAdd1, ShipmentAdd2, ShipmentAdd3, ShipmentAdd4, ShipmentPostalCode, ShipmentCountryID, CustomerPhone, ShipperServiceID, Weight, Length, Width, Height, Value, DispatchDate, WeekendDelivery, SequenceNumber, SequenceTotal, SpecialInstructions, PickupCompanyName, PickupAdd1, PickupAdd2, PickupAdd3, PickupAdd4, PickupPostalCode, PickupCountryID, PickupPhone, Insured, IsCollection, null);
        }
        
        /// <remarks/>
        public void CaptureParcelAsync(
                    string ParcelNumber, 
                    string WaybillNumber, 
                    string AccountNumber, 
                    string CustomerRef, 
                    string CostCentre, 
                    string CustomerName, 
                    string ShipmentAdd1, 
                    string ShipmentAdd2, 
                    string ShipmentAdd3, 
                    string ShipmentAdd4, 
                    string ShipmentPostalCode, 
                    string ShipmentCountryID, 
                    string CustomerPhone, 
                    string ShipperServiceID, 
                    double Weight, 
                    double Length, 
                    double Width, 
                    double Height, 
                    double Value, 
                    System.DateTime DispatchDate, 
                    bool WeekendDelivery, 
                    int SequenceNumber, 
                    int SequenceTotal, 
                    string SpecialInstructions, 
                    string PickupCompanyName, 
                    string PickupAdd1, 
                    string PickupAdd2, 
                    string PickupAdd3, 
                    string PickupAdd4, 
                    string PickupPostalCode, 
                    string PickupCountryID, 
                    string PickupPhone, 
                    bool Insured, 
                    bool IsCollection, 
                    object userState) {
            if ((this.CaptureParcelOperationCompleted == null)) {
                this.CaptureParcelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCaptureParcelOperationCompleted);
            }
            this.InvokeAsync("CaptureParcel", new object[] {
                        ParcelNumber,
                        WaybillNumber,
                        AccountNumber,
                        CustomerRef,
                        CostCentre,
                        CustomerName,
                        ShipmentAdd1,
                        ShipmentAdd2,
                        ShipmentAdd3,
                        ShipmentAdd4,
                        ShipmentPostalCode,
                        ShipmentCountryID,
                        CustomerPhone,
                        ShipperServiceID,
                        Weight,
                        Length,
                        Width,
                        Height,
                        Value,
                        DispatchDate,
                        WeekendDelivery,
                        SequenceNumber,
                        SequenceTotal,
                        SpecialInstructions,
                        PickupCompanyName,
                        PickupAdd1,
                        PickupAdd2,
                        PickupAdd3,
                        PickupAdd4,
                        PickupPostalCode,
                        PickupCountryID,
                        PickupPhone,
                        Insured,
                        IsCollection}, this.CaptureParcelOperationCompleted, userState);
        }
        
        private void OnCaptureParcelOperationCompleted(object arg) {
            if ((this.CaptureParcelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CaptureParcelCompleted(this, new CaptureParcelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fedex.supaswift.co.za/CancelItem", RequestNamespace="http://fedex.supaswift.co.za/", ResponseNamespace="http://fedex.supaswift.co.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CancelItem(string AccountNumber, string WaybillNumber, string ParcelNumber, string Reason, bool CancelEntireWaybill) {
            object[] results = this.Invoke("CancelItem", new object[] {
                        AccountNumber,
                        WaybillNumber,
                        ParcelNumber,
                        Reason,
                        CancelEntireWaybill});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelItemAsync(string AccountNumber, string WaybillNumber, string ParcelNumber, string Reason, bool CancelEntireWaybill) {
            this.CancelItemAsync(AccountNumber, WaybillNumber, ParcelNumber, Reason, CancelEntireWaybill, null);
        }
        
        /// <remarks/>
        public void CancelItemAsync(string AccountNumber, string WaybillNumber, string ParcelNumber, string Reason, bool CancelEntireWaybill, object userState) {
            if ((this.CancelItemOperationCompleted == null)) {
                this.CancelItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelItemOperationCompleted);
            }
            this.InvokeAsync("CancelItem", new object[] {
                        AccountNumber,
                        WaybillNumber,
                        ParcelNumber,
                        Reason,
                        CancelEntireWaybill}, this.CancelItemOperationCompleted, userState);
        }
        
        private void OnCancelItemOperationCompleted(object arg) {
            if ((this.CancelItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelItemCompleted(this, new CancelItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fedex.supaswift.co.za/ErrorDetail", RequestNamespace="http://fedex.supaswift.co.za/", ResponseNamespace="http://fedex.supaswift.co.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlElement ErrorDetail() {
            object[] results = this.Invoke("ErrorDetail", new object[0]);
            return ((System.Xml.XmlElement)(results[0]));
        }
        
        /// <remarks/>
        public void ErrorDetailAsync() {
            this.ErrorDetailAsync(null);
        }
        
        /// <remarks/>
        public void ErrorDetailAsync(object userState) {
            if ((this.ErrorDetailOperationCompleted == null)) {
                this.ErrorDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnErrorDetailOperationCompleted);
            }
            this.InvokeAsync("ErrorDetail", new object[0], this.ErrorDetailOperationCompleted, userState);
        }
        
        private void OnErrorDetailOperationCompleted(object arg) {
            if ((this.ErrorDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ErrorDetailCompleted(this, new ErrorDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fedex.supaswift.co.za/MyFocisLogin", RequestNamespace="http://fedex.supaswift.co.za/", ResponseNamespace="http://fedex.supaswift.co.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long MyFocisLogin(string Username, string Password, int Company) {
            object[] results = this.Invoke("MyFocisLogin", new object[] {
                        Username,
                        Password,
                        Company});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void MyFocisLoginAsync(string Username, string Password, int Company) {
            this.MyFocisLoginAsync(Username, Password, Company, null);
        }
        
        /// <remarks/>
        public void MyFocisLoginAsync(string Username, string Password, int Company, object userState) {
            if ((this.MyFocisLoginOperationCompleted == null)) {
                this.MyFocisLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMyFocisLoginOperationCompleted);
            }
            this.InvokeAsync("MyFocisLogin", new object[] {
                        Username,
                        Password,
                        Company}, this.MyFocisLoginOperationCompleted, userState);
        }
        
        private void OnMyFocisLoginOperationCompleted(object arg) {
            if ((this.MyFocisLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MyFocisLoginCompleted(this, new MyFocisLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fedex.supaswift.co.za/DimensionUpdate", RequestNamespace="http://fedex.supaswift.co.za/", ResponseNamespace="http://fedex.supaswift.co.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long DimensionUpdate(long SessionID, string ParcelNumber, string ScanCode, double Height, double Width, double Length, double Weight, System.DateTime ScanDateTime, string Comment) {
            object[] results = this.Invoke("DimensionUpdate", new object[] {
                        SessionID,
                        ParcelNumber,
                        ScanCode,
                        Height,
                        Width,
                        Length,
                        Weight,
                        ScanDateTime,
                        Comment});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void DimensionUpdateAsync(long SessionID, string ParcelNumber, string ScanCode, double Height, double Width, double Length, double Weight, System.DateTime ScanDateTime, string Comment) {
            this.DimensionUpdateAsync(SessionID, ParcelNumber, ScanCode, Height, Width, Length, Weight, ScanDateTime, Comment, null);
        }
        
        /// <remarks/>
        public void DimensionUpdateAsync(long SessionID, string ParcelNumber, string ScanCode, double Height, double Width, double Length, double Weight, System.DateTime ScanDateTime, string Comment, object userState) {
            if ((this.DimensionUpdateOperationCompleted == null)) {
                this.DimensionUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDimensionUpdateOperationCompleted);
            }
            this.InvokeAsync("DimensionUpdate", new object[] {
                        SessionID,
                        ParcelNumber,
                        ScanCode,
                        Height,
                        Width,
                        Length,
                        Weight,
                        ScanDateTime,
                        Comment}, this.DimensionUpdateOperationCompleted, userState);
        }
        
        private void OnDimensionUpdateOperationCompleted(object arg) {
            if ((this.DimensionUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DimensionUpdateCompleted(this, new DimensionUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void CaptureParcelCompletedEventHandler(object sender, CaptureParcelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CaptureParcelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CaptureParcelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void CancelItemCompletedEventHandler(object sender, CancelItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void ErrorDetailCompletedEventHandler(object sender, ErrorDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ErrorDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ErrorDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlElement Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlElement)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void MyFocisLoginCompletedEventHandler(object sender, MyFocisLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MyFocisLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MyFocisLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void DimensionUpdateCompletedEventHandler(object sender, DimensionUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DimensionUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DimensionUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591